/// <reference types="node" />
import { Readable } from "stream";
export declare type ExtractCallback = (dataStream: Readable) => Promise<string | Buffer>;
export declare type FileNameAndContent = Record<string, string | Buffer>;
export interface ExtractedLayers {
    [layerName: string]: FileNameAndContent;
}
export interface ExtractedLayersAndManifest {
    layers: ExtractedLayers[];
    manifest: DockerArchiveManifest;
}
export interface DockerArchiveManifest {
    Config: string;
    RepoTags: string[];
    Layers: string[];
}
export interface ExtractAction {
    actionName: string;
    filePathMatches: (filePath: string) => boolean;
    callback?: ExtractCallback;
}
